{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/api/DataService.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/education/education.component.css","webpack:///./src/app/education/education.component.html","webpack:///./src/app/education/education.component.ts","webpack:///./src/app/experience/experience.component.css","webpack:///./src/app/experience/experience.component.html","webpack:///./src/app/experience/experience.component.ts","webpack:///./src/app/interests/interests.component.css","webpack:///./src/app/interests/interests.component.html","webpack:///./src/app/interests/interests.component.ts","webpack:///./src/app/knowledge-skills/knowledge-skills.component.css","webpack:///./src/app/knowledge-skills/knowledge-skills.component.html","webpack:///./src/app/knowledge-skills/knowledge-skills.component.ts","webpack:///./src/app/projects/projects.component.css","webpack:///./src/app/projects/projects.component.html","webpack:///./src/app/projects/projects.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,uBAAuB,uBAAuB,qBAAqB,2BAA2B,4BAA4B,KAAK,qBAAqB,wBAAwB,KAAK,cAAc,uBAAuB,KAAK,kBAAkB,yBAAyB,KAAK,C;;;;;;;;;;;ACA3Q,wHAAwH,WAAW,uHAAuH,UAAU,8HAA8H,YAAY,8DAA8D,eAAe,oGAAoG,kBAAkB,0JAA0J,eAAe,4LAA4L,aAAa,mhB;;;;;;;;;;;;;;;;;;;;;;;;;ACCj5B;AACD;AAQjD;IAGI,wBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC5C,CAAC;IAED,iCAAQ,GAAR;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,SAAS,CACjC,cAAI;YACA,KAAI,CAAC,IAAI,GAAG,IAAc,CAAC;QAC/B,CAAC,EACD,eAAK,IAAI,YAAK,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,EAAhC,CAAgC,CAC5C,CAAC;IACN,CAAC;IAbQ,cAAc;QAN1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAKmC,4DAAW;OAHnC,cAAc,CAc1B;IAAD,qBAAC;CAAA;AAd0B;;;;;;;;;;;;;;;;;;;;;;;;;;ACVuB;AAEP;AAW3C;IACI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAEpC,CAAC;IAEM,mCAAa,GAApB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAA8B,CAAC;IAChF,CAAC;IAEM,8BAAQ,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAuB,CAAC;IACpE,CAAC;IAEM,kCAAY,GAAnB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAA4B,CAAC;IAC7E,CAAC;IAEM,kCAAY,GAAnB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAA0B,CAAC;IAC3E,CAAC;IAEM,kCAAY,GAAnB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAA4B,CAAC;IAC9E,CAAC;IAvBQ,WAAW;QAJvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAG4B,+DAAU;OAD3B,WAAW,CAwBvB;IAAD,kBAAC;CAAA;AAxBuB;;;;;;;;;;;;ACbxB,iCAAiC,+BAA+B,2BAA2B,sBAAsB,KAAK,kBAAkB,2BAA2B,oCAAoC,yBAAyB,sDAAsD,KAAK,C;;;;;;;;;;;ACA3R,smCAAsmC,mCAAmC,0B;;;;;;;;;;;;;;;;;;;;;ACE/lC;AAO1C;IAAA;IAGA,CAAC;IAHY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAGxB;IAAD,mBAAC;CAAA;AAHwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTzB,2DAA2D;AACoB;AACrB;AACjB;AAQd;AAC6B;AAET;AACyB;AACH;AACA;AACH;AACuB;AAChC;AA4BzD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAzBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,oFAAmB;gBACnB,iFAAkB;gBAClB,iFAAkB;gBAClB,8EAAiB;gBACjB,sGAAwB;gBACxB,sEAAc;aACf;YACD,OAAO,EAAE;gBACP,oBAAoB;gBACpB,qEAAgB;gBAChB,uEAAa;gBACb,+DAAa;gBACb,gEAAc;gBACd,+DAAa;gBACb,4FAAuB;gBACvB,+DAAa;gBACb,mEAAiB;gBACjB,iEAAe;aAChB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AChDtB,oCAAoC,0BAA0B,KAAK,C;;;;;;;;;;;ACAnE,kNAAkN,aAAa,2HAA2H,iBAAiB,6DAA6D,kBAAkB,KAAK,6BAA6B,8FAA8F,eAAe,mBAAmB,YAAY,iD;;;;;;;;;;;;;;;;;;;;;;;;;ACAtjB;AAED;AAOjD;IAGI,4BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC5C,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CACrC,cAAI;YACA,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC,EACD,eAAK,IAAI,YAAK,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,EAAhC,CAAgC,CAC5C,CAAC;IACN,CAAC;IAbQ,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAImC,4DAAW;OAHnC,kBAAkB,CAc9B;IAAD,yBAAC;CAAA;AAd8B;;;;;;;;;;;;ACT/B,mCAAmC,0BAA0B,2BAA2B,4BAA4B,KAAK,C;;;;;;;;;;;ACAzH,gOAAgO,oBAAoB,+GAA+G,iBAAiB,6CAA6C,qBAAqB,kDAAkD,sBAAsB,KAAK,iCAAiC,gMAAgM,WAAW,iPAAiP,aAAa,iG;;;;;;;;;;;;;;;;;;;;;;;;;ACA37B;AAED;AAOjD;IAGI,6BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC5C,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,CACtC,cAAI;YACA,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC,EACD,eAAK,IAAI,YAAK,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,EAAhC,CAAgC,CAC5C,CAAC;IACN,CAAC;IAbQ,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAImC,4DAAW;OAHnC,mBAAmB,CAc/B;IAAD,0BAAC;CAAA;AAd+B;;;;;;;;;;;;ACThC,mB;;;;;;;;;;;ACAA,kGAAkG,mBAAmB,kJAAkJ,aAAa,+D;;;;;;;;;;;;;;;;;;;;;;;;;ACClO;AACD;AAOjD;IAGI,4BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC5C,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CACrC,cAAI;YACA,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC,EACD,eAAK,IAAI,YAAK,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,EAAhC,CAAgC,CAC5C,CAAC;IACN,CAAC;IAbQ,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAImC,4DAAW;OAHnC,kBAAkB,CAc9B;IAAD,yBAAC;CAAA;AAd8B;;;;;;;;;;;;ACT/B,4BAA4B,wBAAwB,KAAK,kCAAkC,4BAA4B,KAAK,iBAAiB,uBAAuB,KAAK,C;;;;;;;;;;;ACAzK,iLAAiL,mBAAmB,+PAA+P,aAAa,kCAAkC,kBAAkB,mH;;;;;;;;;;;;;;;;;;;;;;;;;ACCld;AACD;AAOjD;IAGI,kCAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC5C,CAAC;IAED,2CAAQ,GAAR;QAAA,iBAOC;QANG,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC,SAAS,CACrC,cAAI;YACA,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC,EACD,eAAK,IAAI,YAAK,CAAC,SAAS,GAAG,KAAK,CAAC,OAAO,CAAC,EAAhC,CAAgC,CAC5C,CAAC;IACN,CAAC;IAbQ,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;SAGjC,CAAC;yCAImC,4DAAW;OAHnC,wBAAwB,CAcpC;IAAD,+BAAC;CAAA;AAdoC;;;;;;;;;;;;ACTrC,mB;;;;;;;;;;;ACAA,gC;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IACI,OAAO;IACP;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALQ,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;;ACP9B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".fa {\\r\\n    font-size: 3vh;\\r\\n    color: white;\\r\\n    padding-right: 1vh;\\r\\n    padding-left: 0.1vh;\\r\\n}\\r\\n\\r\\n.about-name {\\r\\n    font-size: 10vh;\\r\\n}\\r\\n\\r\\n.job {\\r\\n    font-size: 3vh;\\r\\n}\\r\\n\\r\\n.contact {\\r\\n    font-size: 1.3vh;\\r\\n}\"","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>\\n            <span class=\\\"about-name\\\">{{data.name}}</span>\\n        </mat-card-title>\\n        <mat-card-subtitle class=\\\"job\\\">\\n            <mat-icon>work</mat-icon> {{data.job}}\\n        </mat-card-subtitle>\\n        <mat-card-subtitle class=\\\"contact\\\">\\n            <span><mat-icon>email</mat-icon> {{data.email}}</span>\\n            <span><mat-icon>location_on</mat-icon> {{data.location}}</span>\\n            <span *ngIf=\\\"data.phoneNumber\\\">\\n                <mat-icon>call</mat-icon> {{data.phoneNumber}}\\n            </span>\\n        </mat-card-subtitle>\\n        <mat-card-subtitle>\\n            <span *ngIf=\\\"data.linkedIn\\\">\\n                <a href=\\\"{{data.linkedIn}}\\\">\\n                    <i mat-icon-button class=\\\"fa fa-linkedin\\\"></i>\\n                </a>\\n            </span>\\n            <span *ngIf=\\\"data.gitHub\\\">\\n                <a href=\\\"{{data.gitHub}}\\\">\\n                    <i mat-icon-button class=\\\"fa fa-github\\\"></i>\\n                </a>\\n            </span>\\n            <div style=\\\"padding-top:1vh\\\">\\n                <a mat-raised-button color=\\\"primary\\\"\\n                    href=\\\"https://drive.google.com/file/d/0B92Dn0Is3SzlMmx3TU13V09vd1U/view?usp=sharing\\\">\\n                    PDF Resume\\n                </a>\\n            </div>\\n        </mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content>\\n        \\n    </mat-card-content>\\n</mat-card>\\n    \"","import { IAbout } from '../types/IAbout';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../api/DataService';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\n\r\nexport class AboutComponent implements OnInit {\r\n    data: IAbout;\r\n\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dataService.getAbout().subscribe(\r\n            data => {\r\n                this.data = data as IAbout;\r\n            },\r\n            error => alert('Error: ' + error.message)\r\n        );\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Injectable } from '@angular/core';\r\nimport { ISchool } from '../types/ISchool';\r\nimport { IAbout } from '../types/IAbout';\r\nimport { IExperience } from '../types/IExperience';\r\nimport { ISkillSet } from '../types/ISkillset';\r\nimport { IInterest } from '../types/IInterest';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\nexport class DataService {\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    public getExperience(): Observable<IExperience[]> {\r\n        return this.http.get('assets/experience.json') as Observable<IExperience[]>;\r\n    }\r\n\r\n    public getAbout(): Observable<IAbout> {\r\n        return this.http.get('assets/about.json') as Observable<IAbout>;\r\n    }\r\n\r\n    public getInterests(): Observable<IInterest[]> {\r\n        return this.http.get('assets/interests.json') as Observable<IInterest[]>;\r\n    }\r\n\r\n    public getEducation(): Observable<ISchool[]> {\r\n        return this.http.get('assets/education.json') as Observable<ISchool[]>;\r\n    }\r\n\r\n    public getSkillSets(): Observable<ISkillSet[]> {\r\n        return this.http.get('assets/skill-sets.json') as Observable<ISkillSet[]>;\r\n    }\r\n}\r\n","module.exports = \"/* .main-card {\\r\\n    text-align: center\\r\\n} */\\r\\n  \\r\\n.tab-content {\\r\\n    padding: 16px;\\r\\n}\\r\\n  \\r\\nfooter {\\r\\n    text-align: center;\\r\\n    color: rgba(255,255,255,.7);\\r\\n    font-size: 1.2vh;\\r\\n    font-family: Roboto,Helvetica Neue,sans-serif;\\r\\n}\"","module.exports = \"<!-- <nav mat-tab-nav-bar>\\r\\n    <a mat-tab-link\\r\\n        *ngFor=\\\"let route of appRoutes\\\"\\r\\n        [routerLink]=\\\"route.path\\\"\\r\\n        routerLinkActive #rla=\\\"routerLinkActive\\\"\\r\\n        [active]=\\\"rla.isActive\\\">\\r\\n        Hello\\r\\n     </a>\\r\\n</nav> \\r\\n<router-outlet></router-outlet> -->\\r\\n\\r\\n<mat-tab-group>\\r\\n    <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n            <span>Calvin Li</span>\\r\\n        </ng-template>\\r\\n        <div class=\\\"tab-content\\\">\\r\\n            <app-about></app-about>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Experience\\\">\\r\\n        <div class=\\\"tab-content\\\">\\r\\n            <app-experience></app-experience>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Knowledge/Skills\\\">\\r\\n        <app-knowledge-skills></app-knowledge-skills>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Education\\\">\\r\\n        <app-education></app-education>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Interests\\\">\\r\\n        <app-interests></app-interests>\\r\\n    </mat-tab>\\r\\n</mat-tab-group>\\r\\n\\r\\n<!-- <footer>\\r\\n    <p>Last modified: {{ lastModified | date:'y MMMM dd' }}</p>\\r\\n</footer> -->\\r\\n\"","import { Routes } from '@angular/router';\r\nimport { appRoutes } from './app-routing.module';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    // appRoutes: Routes = appRoutes;\r\n    // lastModified: Date = new Date(2017, 9, 28);\r\n}\r\n","// import { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n    MatCardModule,\r\n    MatChipsModule,\r\n    MatTabsModule,\r\n    MatIconModule,\r\n    MatGridListModule,\r\n    MatButtonModule\r\n} from '@angular/material';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ExperienceComponent } from './experience/experience.component';\r\nimport { EducationComponent } from './education/education.component';\r\nimport { InterestsComponent } from './interests/interests.component';\r\nimport { ProjectsComponent } from './projects/projects.component';\r\nimport { KnowledgeSkillsComponent } from './knowledge-skills/knowledge-skills.component';\r\nimport { AboutComponent } from './about/about.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ExperienceComponent,\r\n    EducationComponent,\r\n    InterestsComponent,\r\n    ProjectsComponent,\r\n    KnowledgeSkillsComponent,\r\n    AboutComponent\r\n  ],\r\n  imports: [\r\n    // AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserModule,\r\n    MatCardModule,\r\n    MatChipsModule,\r\n    MatTabsModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    MatGridListModule,\r\n    MatButtonModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"mat-card-content {\\r\\n    padding-left: 1vh;\\r\\n}\"","module.exports = \"<mat-card *ngFor=\\\"let school of data\\\">\\n    <mat-card-header>\\n        <mat-card-title>\\n            <mat-icon class=\\\"card-title\\\">school</mat-icon>\\n            <h1 class=\\\"card-title\\\">{{school.name}}</h1>\\n        </mat-card-title>\\n        <mat-card-subtitle>\\n            <mat-icon>location_on</mat-icon>\\n            {{school.location}}\\n            <mat-icon>date_range</mat-icon>\\n            {{school.startDate}} - {{school.endDate || 'Present'}}\\n        </mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content >\\n        <p>{{school.degree}}</p>\\n        <p>{{school.gpa}} GPA</p>\\n    </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ISchool } from '../types/ISchool';\r\nimport { DataService } from '../api/DataService';\r\n\r\n@Component({\r\n  selector: 'app-education',\r\n  templateUrl: './education.component.html',\r\n  styleUrls: ['./education.component.css']\r\n})\r\nexport class EducationComponent implements OnInit {\r\n    data: ISchool[];\r\n\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dataService.getEducation().subscribe(\r\n            data => {\r\n                this.data = data;\r\n            },\r\n            error => alert('Error: ' + error.message)\r\n        );\r\n    }\r\n}\r\n","module.exports = \"mat-card-footer {\\r\\n    padding-left: 4vh;\\r\\n    padding-right: 4vh;\\r\\n    padding-bottom: 4vh;\\r\\n}\"","module.exports = \"<mat-card *ngFor=\\\"let experience of data\\\">\\r\\n    <mat-card-header>\\r\\n        <mat-card-title>\\r\\n            <mat-icon class=\\\"card-title\\\">business</mat-icon>\\r\\n            <h1 class=\\\"card-title\\\">{{experience.company}}</h1>\\r\\n        </mat-card-title>\\r\\n        <mat-card-subtitle>\\r\\n            <mat-icon>person</mat-icon> {{experience.role}}\\r\\n            <mat-icon>place</mat-icon> {{experience.location}}\\r\\n            <mat-icon>date_range</mat-icon> {{experience.startDate}} - {{experience.endDate || 'Present'}}\\r\\n        </mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n        <ul>\\r\\n            <li *ngFor=\\\"let highlight of experience.highlights\\\">\\r\\n                {{highlight}}\\r\\n            </li>\\r\\n        </ul>\\r\\n    </mat-card-content>\\r\\n    <mat-card-footer>\\r\\n        <mat-chip-list>\\r\\n            <mat-chip *ngFor=\\\"let tech of experience.technologies.split(',')\\\" selected=\\\"true\\\">\\r\\n                {{tech.trim()}}\\r\\n            </mat-chip>\\r\\n        </mat-chip-list>\\r\\n    </mat-card-footer>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IExperience } from '../types/IExperience';\r\nimport { DataService } from '../api/DataService';\r\n\r\n@Component({\r\n  selector: 'app-experience',\r\n  templateUrl: './experience.component.html',\r\n  styleUrls: ['./experience.component.css']\r\n})\r\nexport class ExperienceComponent implements OnInit {\r\n    data: IExperience[];\r\n\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dataService.getExperience().subscribe(\r\n            data => {\r\n                this.data = data;\r\n            },\r\n            error => alert('Error: ' + error.message)\r\n        );\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-card *ngFor=\\\"let interest of data\\\">\\n    <mat-card-title>\\n        <h1>{{interest.category}}</h1>\\n    </mat-card-title>\\n    <mat-card-content>\\n            <ul>\\n                <li *ngFor=\\\"let description of interest.descriptions\\\">{{description}}</li>\\n            </ul>\\n    </mat-card-content>\\n</mat-card>\"","import { IInterest } from '../types/IInterest';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../api/DataService';\r\n\r\n@Component({\r\n  selector: 'app-interests',\r\n  templateUrl: './interests.component.html',\r\n  styleUrls: ['./interests.component.css']\r\n})\r\nexport class InterestsComponent implements OnInit {\r\n    data: IInterest[];\r\n\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dataService.getInterests().subscribe(\r\n            data => {\r\n                this.data = data;\r\n            },\r\n            error => alert('Error: ' + error.message)\r\n        );\r\n    }\r\n}\r\n","module.exports = \"mat-chip {\\r\\n    max-width: 10vh;\\r\\n}\\r\\n\\r\\n.card-container mat-card {\\r\\n    vertical-align: top;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n    flex: 1 1 auto;\\r\\n}\"","module.exports = \"<div class=\\\"card-container\\\">\\n    <mat-card *ngFor=\\\"let skillSet of data\\\">\\n        <mat-card-header>\\n            <mat-card-title>\\n                <h2>{{skillSet.category}}</h2>\\n            </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n            <mat-chip-list class=\\\"mat-chip-list\\\">\\n                <mat-chip *ngFor=\\\"let skill of skillSet.skills\\\" selected=\\\"true\\\">\\n                    {{skill.skill}} <span class=\\\"spacer\\\"></span> {{skill.competence}}\\n                </mat-chip>\\n            </mat-chip-list>\\n        </mat-card-content> \\n    </mat-card>\\n</div>\"","import { ISkillSet } from '../types/ISkillset';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../api/DataService';\r\n\r\n@Component({\r\n  selector: 'app-knowledge-skills',\r\n  templateUrl: './knowledge-skills.component.html',\r\n  styleUrls: ['./knowledge-skills.component.css']\r\n})\r\nexport class KnowledgeSkillsComponent implements OnInit {\r\n    data: ISkillSet[];\r\n\r\n    constructor(private dataService: DataService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.dataService.getSkillSets().subscribe(\r\n            data => {\r\n                this.data = data;\r\n            },\r\n            error => alert('Error: ' + error.message)\r\n        );\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- TODO -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n    // TODO\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}