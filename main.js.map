{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/api/about.ts","webpack:///./src/app/api/education.ts","webpack:///./src/app/api/experiences.ts","webpack:///./src/app/api/interests.ts","webpack:///./src/app/api/skill-sets.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/education/education.component.css","webpack:///./src/app/education/education.component.html","webpack:///./src/app/education/education.component.ts","webpack:///./src/app/experience/experience.component.css","webpack:///./src/app/experience/experience.component.html","webpack:///./src/app/experience/experience.component.ts","webpack:///./src/app/interests/interests.component.css","webpack:///./src/app/interests/interests.component.html","webpack:///./src/app/interests/interests.component.ts","webpack:///./src/app/knowledge-skills/knowledge-skills.component.css","webpack:///./src/app/knowledge-skills/knowledge-skills.component.html","webpack:///./src/app/knowledge-skills/knowledge-skills.component.ts","webpack:///./src/app/projects/projects.component.css","webpack:///./src/app/projects/projects.component.html","webpack:///./src/app/projects/projects.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".fa {\\r\\n    font-size: 3vh;\\r\\n    color: white;\\r\\n    padding-right: 1vh;\\r\\n    padding-left: 0.1vh;\\r\\n}\\r\\n\\r\\n.about-name {\\r\\n    font-size: 10vh;\\r\\n}\\r\\n\\r\\n.job {\\r\\n    font-size: 3vh;\\r\\n}\\r\\n\\r\\n.contact {\\r\\n    font-size: 1.3vh;\\r\\n}\"","module.exports = \"<mat-card>\\n    <mat-card-header>\\n        <mat-card-title>\\n            <span class=\\\"about-name\\\">{{about.name}}</span>\\n        </mat-card-title>\\n        <mat-card-subtitle class=\\\"job\\\">\\n            <mat-icon>work</mat-icon> {{about.job}}\\n        </mat-card-subtitle>\\n        <mat-card-subtitle class=\\\"contact\\\">\\n            <span><mat-icon>email</mat-icon> {{about.email}}</span>\\n            <span><mat-icon>location_on</mat-icon> {{about.location}}</span>\\n            <span *ngIf=\\\"about.phoneNumber\\\">\\n                <mat-icon>call</mat-icon> {{about.phoneNumber}}\\n            </span>\\n        </mat-card-subtitle>\\n        <mat-card-subtitle>\\n            <span *ngIf=\\\"about.linkedIn\\\">\\n                <a href=\\\"{{about.linkedIn}}\\\">\\n                    <i mat-icon-button class=\\\"fa fa-linkedin\\\"></i>\\n                </a>\\n            </span>\\n            <span *ngIf=\\\"about.gitHub\\\">\\n                <a href=\\\"{{about.gitHub}}\\\">\\n                    <i mat-icon-button class=\\\"fa fa-github\\\"></i>\\n                </a>\\n            </span>\\n            <div style=\\\"padding-top:1vh\\\">\\n                <a mat-raised-button color=\\\"primary\\\"\\n                    href=\\\"https://drive.google.com/file/d/0B92Dn0Is3SzlMmx3TU13V09vd1U/view?usp=sharing\\\">\\n                    PDF Resume\\n                </a>\\n            </div>\\n        </mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content>\\n        \\n    </mat-card-content>\\n</mat-card>\\n    \"","import { IAbout } from '../types/IAbout';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { about } from '../api/about';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n    about: IAbout;\r\n\r\n    constructor() {\r\n        this.about = about;\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","import { IAbout } from '../types/IAbout';\r\n\r\nexport const about: IAbout = {\r\n    name: 'Calvin Li',\r\n    location: 'Portland, OR',\r\n    email: 'calvin.xuan.li@gmail.com',\r\n    job: 'Software Engineer',\r\n    phoneNumber: null,\r\n    summary: null,\r\n    linkedIn: 'https://www.linkedin.com/in/calvinxli/',\r\n    gitHub: 'https://github.com/calvinxli'\r\n};\r\n","import { ISchool } from '../types/ISchool';\r\n\r\nexport const education: ISchool[] = [\r\n    {\r\n        name: 'Oregon State University',\r\n        location: 'Corvallis, OR, United States',\r\n        degree: 'Bachelor of Computer Science',\r\n        startDate: new Date(2011, 8),\r\n        endDate: new Date(2016, 2),\r\n        gpa: 3.81\r\n    }\r\n];\r\n","import { IExperience } from '../types/IExperience';\r\n\r\nexport const experiences: IExperience[] = [\r\n    {\r\n        company: '3Sharp',\r\n        location: 'Redmond, WA',\r\n        role: 'Software Engineer',\r\n        startDate: new Date(2018, 1),\r\n        endDate: null,\r\n        highlights: [\r\n            'Contribute towards release requirements of the 3Sharp Demo Platform.',\r\n            'Extend the Demo Platform Services by adding the capability of provisioning and managing virtual machines using Azure Resource Manager templates.',\r\n            'Design and implement a system which allows a cloud-hosted service to control and monitor active virtual machines using Azure Service Bus.',\r\n            'Create REST endpoints using Web API.',\r\n            'Create and update Angular components for the Microsoft Demos Portal.'\r\n        ],\r\n        technologies: 'C#, .NET, .NET Core, Web API, Azure, Cosmos DB, Service Bus, Angular'\r\n    },\r\n    {\r\n        company: 'Grass Valley',\r\n        location: 'Hillsboro, OR',\r\n        role: 'Software Engineer',\r\n        startDate: new Date(2016, 3),\r\n        endDate: new Date(2016, 0),\r\n        highlights: [\r\n            'Contribute towards release requirements of the GV STRATUS software.',\r\n            'Implement new features for GV STRATUS using C#, .NET, WCF RESTful services, WPF and SQL Server.',\r\n            'Debug, design and implement new features for existing WPF applications.',\r\n            'Create an IL weaver that can automatically modify and add data members to data contracts.',\r\n            'Create an automation framework using Selenium for testing the GV STRATUS Web Client. Reduced manual testing effort and made it easier to create/maintain tests.',\r\n            'Create unit tests using NUnit, Unity, and FakeItEasy.'\r\n        ],\r\n        technologies: 'C#, .NET, WCF, WPF, SQL Server, Fody, Selenium, FlaUI, NUnit, Unity, FakeItEasy'\r\n    },\r\n    {\r\n        company: 'Intel',\r\n        location: 'Hillsboro, OR',\r\n        role: 'Software Engineer Intern (MECOP)',\r\n        startDate: new Date(2015, 5),\r\n        endDate: new Date (2015, 11),\r\n        highlights: [\r\n            'Implement a feature that uses UART (universal asynchronous receiver/transmitter) to send and receive debug information from a wireless charging board. Save firmware developer hours by giving hardware validation engineers more control over the firmware.',\r\n            'Automate the process of sending/receiving data through UART using python.',\r\n            'Debug and enhance multi-threaded WPF applications.'\r\n        ],\r\n        technologies: 'C#, .NET, WPF, Python, C'\r\n    },\r\n    {\r\n        company: 'ON Semiconductor',\r\n        location: 'Gresham, OR',\r\n        role: 'Software Development Engineer Intern (MECOP)',\r\n        startDate: new Date(2014, 2),\r\n        endDate: new Date (2014, 8),\r\n        highlights: [\r\n            'Create web forms using ASP.NET and C#. Automate the process of submitting wafer defect reports; improve the effectiveness and efficiency of the quality control process. Convert web applications from PHP to ASP.NET.',\r\n            'Eliminate the need of a third party software. Create a C# console app that parses wafer data and uploads the resulting files to a server via FTP where the data will be used to analyze silicon wafer defects.'\r\n        ],\r\n        technologies: 'C#, .NET, ASP.NET, JavaScript, JQuery, PHP'\r\n    }\r\n];\r\n","import { IInterest } from '../types/IInterest';\r\n\r\nexport const interests: IInterest[] = [\r\n    {\r\n        category: 'Technologies',\r\n        descriptions: [\r\n            'GraphQL',\r\n            'AWS',\r\n            'Azure',\r\n            'Apache Kafka'\r\n        ]\r\n    },\r\n    {\r\n        category: 'General',\r\n        descriptions: [\r\n            'Back-end development',\r\n            'Distributed systems',\r\n            'Full-stack development',\r\n            'Machine learning',\r\n            'Artificial intelligence'\r\n        ]\r\n    },\r\n];\r\n\r\n","import { ISkillSet } from '../types/ISkillset';\r\n\r\nexport const skillSets: ISkillSet[] = [\r\n    {\r\n        category: 'Front End',\r\n        skills: [\r\n            { skill: 'JavaScript', experience: null },\r\n            { skill: 'TypeScript', experience: null },\r\n            { skill: 'HTML', experience: null },\r\n            { skill: 'CSS', experience: null },\r\n            { skill: 'WPF', experience: null },\r\n            { skill: 'Angular', experience: null }\r\n        ]\r\n    },\r\n    {\r\n        category: 'Back End',\r\n        skills: [\r\n            { skill: 'C#', experience: null },\r\n            { skill: '.NET', experience: null },\r\n            { skill: '.NET Core', experience: null },\r\n            { skill: 'SQL', experience: null },\r\n            { skill: 'Web API', experience: null },\r\n            { skill: 'WCF', experience: null },\r\n            { skill: 'GraphQL', experience: null },\r\n            { skill: 'Node.js', experience: null }\r\n        ]\r\n    },\r\n    {\r\n        category: 'Testing',\r\n        skills: [\r\n            { skill: 'NUnit', experience: null },\r\n            { skill: 'FakeItEasy', experience: null },\r\n            { skill: 'Moq', experience: null },\r\n            { skill: 'Selenium', experience: null },\r\n            { skill: 'FlaUI', experience: null }\r\n        ]\r\n    },\r\n    {\r\n        category: 'Tools',\r\n        skills: [\r\n            { skill: 'Visual Studio', experience: null },\r\n            { skill: 'SQL Server', experience: null },\r\n            { skill: 'Fiddler', experience: null },\r\n            { skill: 'Postman', experience: null }\r\n        ]\r\n    },\r\n    {\r\n        category: 'Other',\r\n        skills: [\r\n            { skill: 'Unity', experience: null },\r\n            { skill: 'Fody', experience: null },\r\n            { skill: 'Mono.Cecil', experience: null }\r\n        ]\r\n    },\r\n];\r\n","module.exports = \"/* .main-card {\\r\\n    text-align: center\\r\\n} */\\r\\n  \\r\\n.tab-content {\\r\\n    padding: 16px;\\r\\n}\\r\\n  \\r\\nfooter {\\r\\n    text-align: center;\\r\\n    color: rgba(255,255,255,.7);\\r\\n    font-size: 1.2vh;\\r\\n    font-family: Roboto,Helvetica Neue,sans-serif;\\r\\n}\"","module.exports = \"<!-- <nav mat-tab-nav-bar>\\r\\n    <a mat-tab-link\\r\\n        *ngFor=\\\"let route of appRoutes\\\"\\r\\n        [routerLink]=\\\"route.path\\\"\\r\\n        routerLinkActive #rla=\\\"routerLinkActive\\\"\\r\\n        [active]=\\\"rla.isActive\\\">\\r\\n        Hello\\r\\n     </a>\\r\\n</nav> \\r\\n<router-outlet></router-outlet> -->\\r\\n\\r\\n<mat-tab-group>\\r\\n    <mat-tab>\\r\\n        <ng-template mat-tab-label>\\r\\n            <span>Calvin Li</span>\\r\\n        </ng-template>\\r\\n        <div class=\\\"tab-content\\\">\\r\\n            <app-about></app-about>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Experience\\\">\\r\\n        <div class=\\\"tab-content\\\">\\r\\n            <app-experience></app-experience>\\r\\n        </div>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Knowledge/Skills\\\">\\r\\n        <app-knowledge-skills></app-knowledge-skills>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Education\\\">\\r\\n        <app-education></app-education>\\r\\n    </mat-tab>\\r\\n    <mat-tab label=\\\"Interests\\\">\\r\\n        <app-interests></app-interests>\\r\\n    </mat-tab>\\r\\n</mat-tab-group>\\r\\n\\r\\n<!-- <footer>\\r\\n    <p>Last modified: {{ lastModified | date:'y MMMM dd' }}</p>\\r\\n</footer> -->\\r\\n\"","import { Routes } from '@angular/router';\r\nimport { appRoutes } from './app-routing.module';\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    // appRoutes: Routes = appRoutes;\r\n    // lastModified: Date = new Date(2017, 9, 28);\r\n}\r\n","// import { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {\r\n    MatCardModule,\r\n    MatChipsModule,\r\n    MatTabsModule,\r\n    MatIconModule,\r\n    MatGridListModule,\r\n    MatButtonModule\r\n} from '@angular/material';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { ExperienceComponent } from './experience/experience.component';\r\nimport { EducationComponent } from './education/education.component';\r\nimport { InterestsComponent } from './interests/interests.component';\r\nimport { ProjectsComponent } from './projects/projects.component';\r\nimport { KnowledgeSkillsComponent } from './knowledge-skills/knowledge-skills.component';\r\nimport { AboutComponent } from './about/about.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ExperienceComponent,\r\n    EducationComponent,\r\n    InterestsComponent,\r\n    ProjectsComponent,\r\n    KnowledgeSkillsComponent,\r\n    AboutComponent\r\n  ],\r\n  imports: [\r\n    // AppRoutingModule,\r\n    BrowserModule,\r\n    MatCardModule,\r\n    MatChipsModule,\r\n    MatTabsModule,\r\n    BrowserAnimationsModule,\r\n    MatIconModule,\r\n    MatGridListModule,\r\n    MatButtonModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"mat-card-content {\\r\\n    padding-left: 1vh;\\r\\n}\"","module.exports = \"<mat-card *ngFor=\\\"let school of education\\\">\\n    <mat-card-header>\\n        <mat-card-title>\\n            <mat-icon class=\\\"card-title\\\">school</mat-icon>\\n            <h1 class=\\\"card-title\\\">{{school.name}}</h1>\\n        </mat-card-title>\\n        <mat-card-subtitle>\\n            <mat-icon>location_on</mat-icon>\\n            {{school.location}}\\n            <mat-icon>date_range</mat-icon>\\n            {{school.startDate | date:'y MMM'}} - {{school.endDate ? (school.endDate | date:'y MMM') : 'Present'}}\\n        </mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content >\\n        <p>{{school.degree}}</p>\\n        <p>{{school.gpa}} GPA</p>\\n    </mat-card-content>\\n</mat-card>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ISchool } from '../types/ISchool';\r\nimport { education } from '../api/education';\r\n\r\n@Component({\r\n  selector: 'app-education',\r\n  templateUrl: './education.component.html',\r\n  styleUrls: ['./education.component.css']\r\n})\r\nexport class EducationComponent implements OnInit {\r\n    education: ISchool[];\r\n\r\n    constructor() {\r\n        this.education = education;\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","module.exports = \"mat-card-footer {\\r\\n    padding-left: 4vh;\\r\\n    padding-right: 4vh;\\r\\n    padding-bottom: 4vh;\\r\\n}\"","module.exports = \"<mat-card *ngFor=\\\"let experience of experiences\\\">\\r\\n    <mat-card-header>\\r\\n        <mat-card-title>\\r\\n            <mat-icon class=\\\"card-title\\\">business</mat-icon>\\r\\n            <h1 class=\\\"card-title\\\">{{experience.company}}</h1>\\r\\n        </mat-card-title>\\r\\n        <mat-card-subtitle>\\r\\n            <mat-icon>person</mat-icon> {{experience.role}}\\r\\n            <mat-icon>place</mat-icon> {{experience.location}}\\r\\n            <mat-icon>date_range</mat-icon> {{experience.startDate | date:'y MMM'}} - {{experience.endDate ? (experience.endDate | date:'y MMM') : 'Present'}}\\r\\n        </mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n        <ul>\\r\\n            <li *ngFor=\\\"let highlight of experience.highlights\\\">\\r\\n                {{highlight}}\\r\\n            </li>\\r\\n        </ul>\\r\\n    </mat-card-content>\\r\\n    <mat-card-footer>\\r\\n        <mat-chip-list>\\r\\n            <mat-chip *ngFor=\\\"let tech of experience.technologies.split(',')\\\" selected=\\\"true\\\">\\r\\n                {{tech.trim()}}\\r\\n            </mat-chip>\\r\\n        </mat-chip-list>\\r\\n    </mat-card-footer>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport { IExperience } from '../types/IExperience';\r\nimport { experiences } from '../api/experiences';\r\n\r\n@Component({\r\n  selector: 'app-experience',\r\n  templateUrl: './experience.component.html',\r\n  styleUrls: ['./experience.component.css']\r\n})\r\nexport class ExperienceComponent implements OnInit {\r\n    experiences: IExperience[];\r\n\r\n    constructor() {\r\n        this.experiences = experiences;\r\n     }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-card *ngFor=\\\"let interest of interests\\\">\\n    <mat-card-title>\\n        <h1>{{interest.category}}</h1>\\n    </mat-card-title>\\n    <mat-card-content>\\n            <ul>\\n                <li *ngFor=\\\"let description of interest.descriptions\\\">{{description}}</li>\\n            </ul>\\n    </mat-card-content>\\n</mat-card>\"","import { IInterest } from '../types/IInterest';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { interests } from '../api/interests';\r\n@Component({\r\n  selector: 'app-interests',\r\n  templateUrl: './interests.component.html',\r\n  styleUrls: ['./interests.component.css']\r\n})\r\nexport class InterestsComponent implements OnInit {\r\n    interests: IInterest[];\r\n\r\n    constructor() {\r\n        this.interests = interests;\r\n     }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","module.exports = \"mat-chip {\\r\\n    max-width: 10vh;\\r\\n}\\r\\n\\r\\n.card-container mat-card {\\r\\n    vertical-align: top;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n    flex: 1 1 auto;\\r\\n}\"","module.exports = \"<div class=\\\"card-container\\\">\\n    <mat-card *ngFor=\\\"let skillSet of skillSets\\\">\\n        <mat-card-header>\\n            <mat-card-title>\\n                <h2>{{skillSet.category}}</h2>\\n            </mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n            <mat-chip-list class=\\\"mat-chip-list\\\">\\n                <mat-chip *ngFor=\\\"let skill of skillSet.skills\\\" selected=\\\"true\\\">\\n                    {{skill.skill}} <span class=\\\"spacer\\\"></span> {{skill.experience}}\\n                </mat-chip>\\n            </mat-chip-list>\\n        </mat-card-content> \\n    </mat-card>\\n</div>\"","import { ISkillSet } from '../types/ISkillset';\r\nimport { skillSets } from '../api/skill-sets';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-knowledge-skills',\r\n  templateUrl: './knowledge-skills.component.html',\r\n  styleUrls: ['./knowledge-skills.component.css']\r\n})\r\nexport class KnowledgeSkillsComponent implements OnInit {\r\n    skillSets: ISkillSet[];\r\n\r\n    constructor() {\r\n        this.skillSets = skillSets;\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!-- TODO -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.css']\n})\nexport class ProjectsComponent implements OnInit {\n    // TODO\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}